{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://example.com/schemas/api-config.json",
  "title": "API Configuration",
  "description": "Complex API configuration with advanced JSON Schema 2020-12 features",
  "type": "object",
  "properties": {
    "apiVersion": {
      "type": "string",
      "pattern": "^v[0-9]+\\.[0-9]+\\.[0-9]+$"
    },
    "endpoints": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/endpoint"
      },
      "minItems": 1,
      "unevaluatedItems": false
    },
    "authentication": {
      "$dynamicRef": "#auth"
    },
    "rateLimiting": {
      "type": "object",
      "properties": {
        "enabled": {"type": "boolean"},
        "limits": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "path": {"type": "string"},
              "method": {"type": "string", "enum": ["GET", "POST", "PUT", "DELETE"]},
              "maxRequests": {"type": "integer", "minimum": 1},
              "windowSeconds": {"type": "integer", "minimum": 1}
            },
            "required": ["path", "method", "maxRequests", "windowSeconds"]
          },
          "prefixItems": [
            {
              "properties": {
                "path": {"const": "/api/health"},
                "maxRequests": {"minimum": 1000}
              }
            }
          ]
        }
      },
      "if": {
        "properties": {"enabled": {"const": true}}
      },
      "then": {
        "required": ["limits"]
      }
    },
    "cors": {
      "type": "object",
      "properties": {
        "allowedOrigins": {
          "type": "array",
          "items": {"type": "string", "format": "uri"}
        },
        "allowedMethods": {
          "type": "array",
          "items": {"type": "string"},
          "contains": {"const": "GET"}
        },
        "maxAge": {"type": "integer", "minimum": 0}
      },
      "unevaluatedProperties": false
    }
  },
  "required": ["apiVersion", "endpoints", "authentication"],
  "$defs": {
    "endpoint": {
      "type": "object",
      "properties": {
        "path": {"type": "string", "pattern": "^/"},
        "method": {"type": "string"},
        "description": {"type": "string"},
        "parameters": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {"type": "string"},
              "in": {"type": "string", "enum": ["query", "header", "path"]},
              "required": {"type": "boolean"},
              "schema": {"type": "object"}
            },
            "required": ["name", "in", "schema"]
          }
        },
        "security": {
          "type": "array",
          "items": {"type": "string"}
        }
      },
      "required": ["path", "method"],
      "dependentSchemas": {
        "security": {
          "properties": {
            "authentication": {"$ref": "#/$defs/authRequired"}
          }
        }
      }
    },
    "authRequired": {
      "$anchor": "auth",
      "$dynamicAnchor": "auth",
      "type": "object",
      "properties": {
        "type": {"type": "string", "enum": ["apiKey", "oauth2", "basic"]},
        "config": {"type": "object"}
      },
      "required": ["type"],
      "allOf": [
        {
          "if": {"properties": {"type": {"const": "apiKey"}}},
          "then": {
            "properties": {
              "config": {
                "properties": {
                  "headerName": {"type": "string"},
                  "prefix": {"type": "string"}
                },
                "required": ["headerName"]
              }
            }
          }
        },
        {
          "if": {"properties": {"type": {"const": "oauth2"}}},
          "then": {
            "properties": {
              "config": {
                "properties": {
                  "authorizationUrl": {"type": "string", "format": "uri"},
                  "tokenUrl": {"type": "string", "format": "uri"},
                  "scopes": {"type": "object"}
                },
                "required": ["authorizationUrl", "tokenUrl"]
              }
            }
          }
        }
      ]
    }
  }
}